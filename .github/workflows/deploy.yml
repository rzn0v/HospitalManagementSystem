name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t hospital-app .

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        run: docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_PASSWORD }}"
        # Uncomment and configure for ECR:
        # - name: Configure AWS credentials
        #   uses: aws-actions/configure-aws-credentials@v4
        #   with:
        #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #     aws-region: ${{ secrets.AWS_REGION }}
        #
        # - name: Login to ECR
        #   id: login-ecr
        #   uses: aws-actions/amazon-ecr-login@v2
        #
        # - name: Tag Docker image for ECR
        #   run: docker tag hospital-app ${{ steps.login-ecr.outputs.registry }}/hospital-app:latest

      - name: Tag Docker image
        run: docker tag hospital-app ${{ secrets.DOCKERHUB_USERNAME }}/hospital-app:latest
        # Uncomment for ECR:
        # run: docker tag hospital-app ${{ steps.login-ecr.outputs.registry }}/hospital-app:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/hospital-app:latest
        # Uncomment for ECR:
        # run: docker push ${{ steps.login-ecr.outputs.registry }}/hospital-app:latest

  deploy:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - name: SSH and Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/hospital-app:latest
            docker stop condescending_mayer || true
            docker rm condescending_mayer || true
            docker run -d --name condescending_mayer -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/hospital-app:latest
            echo "Deployment successful!"
            # If using ECR, replace the docker pull command with the ECR registry URL